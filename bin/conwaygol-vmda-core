#!/bin/sh

LANG=C

pname="$(basename "$0")"
stime="$(date +%Y%m%d%H%M%S)"
tmp="/tmp/$pname.$stime.$$"

trap 'rm -f $tmp-*' EXIT

######################################################################

cell_vmda=${1:-"-"}

######################################################################

cat "${cell_vmda}"		|
    ## calculate affetion srrounded cells
    awk	'
	{	
		print $1, $2, $3, $4 - 1, $5 - 1, ($6=="9"?1:0), 0
		print $1, $2, $3, $4    , $5 - 1, ($6=="9"?1:0), 0
		print $1, $2, $3, $4 + 1, $5 - 1, ($6=="9"?1:0), 0

		print $1, $2, $3, $4 - 1, $5    , ($6=="9"?1:0), 0
		print $1, $2, $3, $4    , $5    , ($6=="9"?1:0), $6
		print $1, $2, $3, $4 + 1, $5    , ($6=="9"?1:0), 0

		print $1, $2, $3, $4 - 1, $5 + 1, ($6=="9"?1:0), 0
		print $1, $2, $3, $4    , $5 + 1, ($6=="9"?1:0), 0
		print $1, $2, $3, $4 + 1, $5 + 1, ($6=="9"?1:0), 0
	}'			|
    awk '($2 >= $4 && $4 > "0") && ($3 >= $5 && $5 > "0")'	|
    sort -k5n -k4n		|
    #=> sm2 key=1/5 val=6/7		|
    awk	-v sum6=0 -v sum7=0 '
	key != $1 " " $2 " " $3 " " $4 " " $5	{
		print key, sum6, sum7

		key = $1 " " $2 " " $3 " " $4 " " $5
		sum6 = $6
		sum7 = $7
		next
	}
	{
		sum6 = sum6 + $6; sum7 = sum7 + $7;
	}
	END	{
		print $1, $2, $3, $4, $5, sum6, sum7
	}'			|
    sed '1d'			|
    #
    ## calculate next state for each cell
    awk '
	($7 != "9" && $6 == "3")	{
		# RULE1 : reproduction
		print $1, $2, $3, $4, $5, 9;		next;	}
	($7 != "9" && $6 != "3")	{
		print $1, $2, $3, $4, $5, $7 - 1;	next;	}

	($7 == "9" && ($6 == "3" || $6 == "4"))	{
		# RULE2 : sustain
		print $1, $2, $3, $4, $5, 9;		next;	}
	($7 == "9" && $6 <= "2")	{
		# RULE3 : underpopulation
		print $1, $2, $3, $4, $5, $7 - 1;	next;	}
	($7 == "9" && $6 >= "5")	{
		# RULE3 : underpopulation
		print $1, $2, $3, $4, $5, $7 - 1;	next;	}
	{	print "'"$pname.$stime.$$ ERROR unreachable code section."'"	> "/dev/stderr";
		exit 1;	}'	|
    awk	'$6 > 0'

######################################################################
exit 0
