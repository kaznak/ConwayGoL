#!/bin/sh

LANG=C

pname="$(basename "$0")"
stime="$(date +%Y%m%d%H%M%S)"
tmp="/tmp/$pname.$stime.$$"

trap 'rm -f $tmp-*' EXIT

######################################################################

pattern=${1:-"-"}

X=${2:-"10"}
Y=${3:-"10"}

dX=${4:-"0"}
dY=${5:-"0"}

######################################################################

cat "${pattern}"		|
# trancelator
    tr	' _X'	\
	'009'			|
    #
    ## convert cell pattern into vMDA(Vertical Multi-Dimensional Array) format
    sed -e 's/./& /g'		|
    awk -v X="$X" -v Y="$Y" -v dX="$dX" -v dY="$dY"	'
	{	for(i = 1;i <= NF;i++)	if($(i)!="0")
			printf("2 %d %d %d %d %d\n", X, Y, i+dX, NR+dY, $(i))
	}'			|
    #
    ## calculate affetion srrounded cells
    awk	'
	{
		print $1, $2, $3, $4 - 1, $5 - 1, ($6=="9"), 0
		print $1, $2, $3, $4    , $5 - 1, ($6=="9"), 0
		print $1, $2, $3, $4 + 1, $5 - 1, ($6=="9"), 0

		print $1, $2, $3, $4 - 1, $5    , ($6=="9"), 0
		print $1, $2, $3, $4    , $5    , ($6=="9"), $6
		print $1, $2, $3, $4 + 1, $5    , ($6=="9"), 0

		print $1, $2, $3, $4 - 1, $5 + 1, ($6=="9"), 0
		print $1, $2, $3, $4    , $5 + 1, ($6=="9"), 0
		print $1, $2, $3, $4 + 1, $5 + 1, ($6=="9"), 0
	}'			|
    awk '($2 >= $4 && $4 > "0") && ($3 >= $5 && $5 > "0")'	|
    sort -k5n -k4n		|
    #=> sm2 key=1/5 val=6/7		|
    awk	-v sum6=0 -v sum7=0 '
	key != $1 " " $2 " " $3 " " $4 " " $5	{
		print key, sum6, sum7

		key = $1 " " $2 " " $3 " " $4 " " $5
		sum6 = $6
		sum7 = $7
		next
	}
	{
		sum6 = sum6 + $6; sum7 = sum7 + $7;
	}
	END	{
		print $1, $2, $3, $4, $5, sum6, sum7
	}'			|
    sed '1d'			|
    #
    ## calculate next state for each cell
    awk '
	($7 != "9" && $6 == "3")	{
		# RULE1 : reproduction
		print $1, $2, $3, $4, $5, 9;		next;	}
	($7 != "9" && $6 != "3")	{
		print $1, $2, $3, $4, $5, $7 - 1;	next;	}

	($7 == "9" && ($6 == "3" || $6 == "4"))	{
		# RULE2 : sustain
		print $1, $2, $3, $4, $5, 9;		next;	}
	($7 == "9" && $6 <= "2")	{
		# RULE3 : underpopulation
		print $1, $2, $3, $4, $5, $7 - 1;	next;	}
	($7 == "9" && $6 >= "5")	{
		# RULE3 : underpopulation
		print $1, $2, $3, $4, $5, $7 - 1;	next;	}
	{	print "'"$pname.$stime.$$ ERROR unreachable code section."'"	> "/dev/stderr";
		exit 1;	}'	|
    awk	'$6 > 0'		|
    #
    ## convert vMDA into cell pattern
    awk -v ccol=1 -v cline=1	'
	{	X = $2; Y = $3;
		for(; $5 > cline; cline++)	{
			for(; X >= ccol; ccol++)	printf("0");
			printf("\n");  
			ccol = 1;
		}
		for(; $4 > ccol; ccol++)	printf("0");

		printf("%d", $6); ccol++;	}
	END{	for(; Y >= cline; cline++)	{
			for(; X >= ccol; ccol++)	printf("0");
			printf("\n");
			ccol = 1;
		}
	}'			|
    tr '0123456789'	\
       '_________X'


######################################################################
exit 0
